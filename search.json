[{"path":"/articles/workflow.html","id":"install-r-package","dir":"Articles","previous_headings":"","what":"Install R package","title":"Workflow","text":"","code":"# Enable repository from kwb-r options(repos = c(   kwbr = 'https://kwb-r.r-universe.dev',   CRAN = 'https://cloud.r-project.org'))  # Download and install kwb.swmm in R install.packages('kwb.swmm')"},{"path":"/articles/workflow.html","id":"download-swmm-executable","dir":"Articles","previous_headings":"","what":"Download SWMM Executable","title":"Workflow","text":"","code":"library(kwb.swmm) #> SWMM executable not found.  swmm_exe <- kwb.swmm::download_swmm_executable(tdir = getwd(),                                                swmm_version = \"5.2.0\") #> Downloading and extracting SWMM folder to 'D:/a/kwb.swmm/kwb.swmm/vignettes' ... ok. (0.52s)"},{"path":"/articles/workflow.html","id":"define-paths","dir":"Articles","previous_headings":"","what":"Define Paths","title":"Workflow","text":"","code":"paths_list <- list(   model_dir =  kwb.swmm::extdata_file(\"models/lid\"),   model_name = \"zone-1_bioretention-cell_lidshare-1.00\",   model_inp = \"<model_dir>/<model_name>.inp\",   model_out = \"<model_dir>/<model_name>.out\",   model_rpt = \"<model_dir>/<model_name>.rpt\",   swmm_exe = swmm_exe )  paths <- kwb.utils::resolve(paths_list)"},{"path":"/articles/workflow.html","id":"read-input","dir":"Articles","previous_headings":"","what":"Read Input","title":"Workflow","text":"","code":"inp <- swmmr::read_inp(paths$model_inp)  ## print some inputs inp$options #> # A tibble: 34 × 2 #>    Option            Value      #>    <chr>             <chr>      #>  1 FLOW_UNITS        LPS        #>  2 INFILTRATION      HORTON     #>  3 FLOW_ROUTING      KINWAVE    #>  4 LINK_OFFSETS      DEPTH      #>  5 MIN_SLOPE         0          #>  6 ALLOW_PONDING     NO         #>  7 SKIP_STEADY_STATE NO         #>  8 IGNORE_SNOWMELT   YES        #>  9 START_DATE        04/30/2008 #> 10 START_TIME        00:00:00   #> # … with 24 more rows  inp$lid_controls #> # A tibble: 3 × 9 #>   Name                `Type/Layer`  Par1   Par2   Par3   Par4  Par5  Par6   Par7 #>   <chr>               <chr>        <int>  <dbl>  <dbl>  <dbl> <dbl> <dbl>  <dbl> #> 1 bioretention_cell.… BC              NA NA     NA     NA      NA    NA   NA     #> 2 bioretention_cell.… SURFACE        300  0.05   0.3    4       5    NA   NA     #> 3 bioretention_cell.… SOIL           500  0.437  0.105  0.047   3.6   0.5  0.047  inp$lid_usage #> # A tibble: 1 × 10 #>   Subcatchment `LID Process`   Number  Area Width InitSat FromImp ToPerv RptFile #>   <chr>        <chr>            <int> <int> <int>   <int>   <int>  <int> <chr>   #> 1 S1           bioretention_c…      1  1000     6       0       0      0 *       #> # … with 1 more variable: DrainTo <chr>"},{"path":"/articles/workflow.html","id":"run-swmm","dir":"Articles","previous_headings":"","what":"Run SWMM","title":"Workflow","text":"","code":"kwb.swmm::run_swmm(model_dir = paths$model_dir,                    model_inp = paths$model_inp,                    exe = paths$swmm_exe)"},{"path":"/articles/workflow.html","id":"read-output","dir":"Articles","previous_headings":"","what":"Read Output","title":"Workflow","text":"","code":"results <- kwb.swmm::get_results(path_out = paths$model_out) #> Reading time series 1/14 ... ok. #> Reading time series 2/14 ... ok. #> Reading time series 3/14 ... ok. #> Reading time series 4/14 ... ok. #> Reading time series 5/14 ... ok. #> Reading time series 6/14 ... ok. #> Reading time series 7/14 ... ok. #> Reading time series 8/14 ... ok. #> Reading time series 9/14 ... ok. #> Reading time series 10/14 ... ok. #> Reading time series 11/14 ... ok. #> Reading time series 12/14 ... ok. #> Reading time series 13/14 ... ok. #> Reading time series 14/14 ... ok. results #> # A tibble: 100,463 × 15 #>    datetime            total_rainfall total_snow_depth average_losses #>    <dttm>                       <dbl>            <dbl>          <dbl> #>  1 2008-04-30 01:00:00          0                    0              0 #>  2 2008-04-30 02:00:00          0                    0              0 #>  3 2008-04-30 03:00:00          0                    0              0 #>  4 2008-04-30 04:00:00          0                    0              0 #>  5 2008-04-30 05:00:00          0                    0              0 #>  6 2008-04-30 06:00:00          0                    0              0 #>  7 2008-04-30 07:00:00          0.789                0              0 #>  8 2008-04-30 08:00:00          0                    0              0 #>  9 2008-04-30 09:00:00          0                    0              0 #> 10 2008-04-30 10:00:00          0                    0              0 #> # … with 100,453 more rows, and 11 more variables: total_runoff <dbl>, #> #   total_dry_weather_inflow <dbl>, total_groundwater_inflow <dbl>, #> #   total_RDII_inflow <dbl>, total_external_inflow <dbl>, #> #   total_direct_inflow <dbl>, total_external_flooding <dbl>, #> #   total_outflow_from_outfalls <dbl>, total_nodal_storage_volume <dbl>, #> #   potential_evaporation <dbl>, actual_evaporation <dbl>"},{"path":"/articles/workflow.html","id":"calculate-rainstats","dir":"Articles","previous_headings":"","what":"Calculate Rainstats","title":"Workflow","text":"","code":"results_system <- kwb.swmm::get_results(path_out = paths$model_out,                                         vIndex = c(1, 4)) %>%   dplyr::rename(     total_rainfall_mmPerHour = .data$total_rainfall,     total_runoff_litrePerSecond = .data$total_runoff   ) %>%   dplyr::mutate(total_runoff_mmPerHour = kwb.swmm::lps_to_mmPerHour(.data$total_runoff_litrePerSecond)) %>%   dplyr::select(-.data$total_runoff_litrePerSecond) #> Reading time series 1/2 ... ok. #> Reading time series 2/2 ... ok.  results_system #> # A tibble: 100,463 × 3 #>    datetime            total_rainfall_mmPerHour total_runoff_mmPerHour #>    <dttm>                                 <dbl>                  <dbl> #>  1 2008-04-30 01:00:00                    0                          0 #>  2 2008-04-30 02:00:00                    0                          0 #>  3 2008-04-30 03:00:00                    0                          0 #>  4 2008-04-30 04:00:00                    0                          0 #>  5 2008-04-30 05:00:00                    0                          0 #>  6 2008-04-30 06:00:00                    0                          0 #>  7 2008-04-30 07:00:00                    0.789                      0 #>  8 2008-04-30 08:00:00                    0                          0 #>  9 2008-04-30 09:00:00                    0                          0 #> 10 2008-04-30 10:00:00                    0                          0 #> # … with 100,453 more rows  results_vrr <-  results_system %>%   dplyr::mutate(year = lubridate::year(.data$datetime)) %>%   dplyr::group_by(.data$year) %>%   dplyr::summarise(vrr = 1 - (     sum(.data$total_runoff_mmPerHour) / sum(.data$total_rainfall_mmPerHour)   )) results_vrr #> # A tibble: 12 × 2 #>     year   vrr #>    <dbl> <dbl> #>  1  2008     1 #>  2  2009     1 #>  3  2010     1 #>  4  2011     1 #>  5  2012     1 #>  6  2013     1 #>  7  2014     1 #>  8  2015     1 #>  9  2016     1 #> 10  2017     1 #> 11  2018     1 #> 12  2019     1  col_eventsep <- \"total_rainfall_mmPerHour\"  rainevent_stats_mean <-   kwb.swmm::calculate_rainevent_stats(results_system,                                       col_eventsep = col_eventsep,                                       aggregation_function = \"mean\") %>%   dplyr::mutate(     rainfall_cbm = .data$dur * .data$mean_total_rainfall_mmPerHour / 3600 /       1000,     runoff_cbm = .data$dur * .data$mean_total_runoff_mmPerHour /       3600 / 1000,     vrr = 1 - runoff_cbm / rainfall_cbm   ) %>%   dplyr::arrange(dplyr::desc(.data$mean_total_rainfall_mmPerHour)) #> Calculating `mean` event stats for parameter `total_rainfall_mmPerHour` ... ok. (4.06s)  #> Calculating `mean` event stats for parameter `total_runoff_mmPerHour` ... ok. (3.94s)  head(rainevent_stats_mean) #>   iBeg iEnd                tBeg                tEnd   dur pBefore pAfter event #> 1 5034 5034 2016-08-21 13:00:00 2016-08-21 13:00:00  3600   86400 162000   995 #> 2 3024 3035 2013-06-23 15:00:00 2013-06-24 04:00:00 50400   36000  25200   599 #> 3 5230 5238 2017-06-21 15:00:00 2017-06-21 23:00:00 32400   43200 259200  1046 #> 4 3224 3233 2013-08-06 14:00:00 2013-08-06 23:00:00 36000  280800  32400   642 #> 5 6062 6068 2019-08-07 15:00:00 2019-08-07 21:00:00 25200   68400  72000  1201 #> 6 5445 5447 2018-06-28 12:00:00 2018-06-28 14:00:00 10800   86400  72000  1092 #>   mean_total_rainfall_mmPerHour mean_total_runoff_mmPerHour rainfall_cbm #> 1                      8.605081                           0  0.008605081 #> 2                      6.654423                           0  0.093161928 #> 3                      5.424497                           0  0.048820477 #> 4                      5.153533                           0  0.051535330 #> 5                      4.868611                           0  0.034080276 #> 6                      4.771171                           0  0.014313512 #>   runoff_cbm vrr #> 1          0   1 #> 2          0   1 #> 3          0   1 #> 4          0   1 #> 5          0   1 #> 6          0   1  rainevent_stats_max <-   kwb.swmm::calculate_rainevent_stats(results_system,                                       col_eventsep = col_eventsep,                                       aggregation_function = \"max\") %>%   dplyr::arrange(dplyr::desc(.data$max_total_rainfall_mmPerHour)) #> Calculating `max` event stats for parameter `total_rainfall_mmPerHour` ... ok. (3.90s)  #> Calculating `max` event stats for parameter `total_runoff_mmPerHour` ... ok. (3.27s)  head(rainevent_stats_max) #>   iBeg iEnd                tBeg                tEnd    dur pBefore pAfter event #> 1  911  953 2009-07-26 12:00:00 2009-07-28 20:00:00 205200   61200  36000   193 #> 2 5230 5238 2017-06-21 15:00:00 2017-06-21 23:00:00  32400   43200 259200  1046 #> 3 3224 3233 2013-08-06 14:00:00 2013-08-06 23:00:00  36000  280800  32400   642 #> 4 3024 3035 2013-06-23 15:00:00 2013-06-24 04:00:00  50400   36000  25200   599 #> 5 2554 2559 2012-07-17 16:00:00 2012-07-17 21:00:00  21600   72000  21600   502 #> 6 5994 6002 2019-07-29 16:00:00 2019-07-30 03:00:00  43200  212400  43200  1192 #>   max_total_rainfall_mmPerHour max_total_runoff_mmPerHour #> 1                     21.09241                          0 #> 2                     17.84431                          0 #> 3                     16.58891                          0 #> 4                     15.38480                          0 #> 5                     15.36419                          0 #> 6                     15.04827                          0"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michael Rustler. Author, maintainer. . Funder. . Copyright holder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rustler M (2022). kwb.swmm: R Package Functions Working EPA's Storm Water Management Model (SWMM). R package version 0.1.0, https://github.com/KWB-R/kwb.swmm.","code":"@Manual{,   title = {kwb.swmm: R Package with Functions for Working with EPA`s Storm Water Management Model (SWMM)},   author = {Michael Rustler},   year = {2022},   note = {R package version 0.1.0},   url = {https://github.com/KWB-R/kwb.swmm}, }"},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R Package with Functions for Working with EPA`s Storm\n    Water Management Model (SWMM)","text":"installing latest release R package run following code :","code":"# Enable repository from kwb-r options(repos = c(   kwbr = 'https://kwb-r.r-universe.dev',   CRAN = 'https://cloud.r-project.org'))    # Download and install kwb.swmm in R install.packages('kwb.swmm')  # Browse the kwb.swmm manual pages help(package = 'kwb.swmm')"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"R Package with Functions for Working with EPA`s Storm\n    Water Management Model (SWMM)","text":"Checkout Workflow article use R package.","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021-2022 Kompetenzzentrum Wasser Berlin gGmbH (KWB) Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/reference/calculate_rainevent_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Rain Events — calculate_rainevent_stats","title":"Calculate Rain Events — calculate_rainevent_stats","text":"Calculate Rain Events","code":""},{"path":"/reference/calculate_rainevent_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Rain Events — calculate_rainevent_stats","text":"","code":"calculate_rainevent_stats(   results_system,   col_eventsep = \"total_runoff\",   aggregation_function = \"sum\",   signalThreshold = 0,   eventSeparationTime = 6 * 3600,   ... )"},{"path":"/reference/calculate_rainevent_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Rain Events — calculate_rainevent_stats","text":"results_system data frame retrieved get_results col_eventsep column used event separation (default: \"total_runoff\") aggregation_function function used aggregation passed getEventStatistics (default: \"sum\") signalThreshold passed getEvents, Value needs exceeded (signalComparisonOperator == \"gt\") reached (signalComparisonOperator == \"ge\") rain heights (intensities) order counted \"signal\". default: 0 eventSeparationTime eventSeparationTime passed getEvents (default: 6*3600) ... additional arguments passed getEvents","code":""},{"path":"/reference/calculate_rainevent_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Rain Events — calculate_rainevent_stats","text":"tibble statistics rain events","code":""},{"path":"/reference/calculate_rainevent_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Rain Events — calculate_rainevent_stats","text":"","code":"if (FALSE) { path_out_file <- \"path-to-my-swmm-output-file\" results_system <- kwb.swmm::get_results(path_out = path_out_file) rainevent_stats <- calculate_rainevent_stats(results_system,                            aggregation_function = \"sum\",                            signalThreshold = 0,                            eventSeparationTime = 6*3600) }"},{"path":"/reference/download_swmm_executable.html","id":null,"dir":"Reference","previous_headings":"","what":"Download SWMM executable (currently only for windows only!) — download_swmm_executable","title":"Download SWMM executable (currently only for windows only!) — download_swmm_executable","text":"downloads SWMM executable USEPA`s GitHub repo https://github.com/USEPA/Stormwater-Management-Model/releases","code":""},{"path":"/reference/download_swmm_executable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download SWMM executable (currently only for windows only!) — download_swmm_executable","text":"","code":"download_swmm_executable(tdir = tempdir(), swmm_version = \"5.2.0\")"},{"path":"/reference/download_swmm_executable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download SWMM executable (currently only for windows only!) — download_swmm_executable","text":"tdir target directory unzipping zip files swmm_version desired SWMM version, one : \"5.2.0\", \"5.1.15\", \"5.1.14\", \"5.1.13\" (default: \"5.2.0\")","code":""},{"path":"/reference/download_swmm_executable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download SWMM executable (currently only for windows only!) — download_swmm_executable","text":"path download \"runswmm.exe\"","code":""},{"path":"/reference/download_swmm_executable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download SWMM executable (currently only for windows only!) — download_swmm_executable","text":"","code":"download_swmm_executable() #> Downloading and extracting SWMM folder to 'C:\\Users\\RUNNER~1\\AppData\\Local\\Temp\\Rtmpcn9Kuj' ... ok. (0.81s)  #> [1] \"C:/Users/RUNNER~1/AppData/Local/Temp/Rtmpcn9Kuj/swmm-solver-5.2.0-win64/bin/runswmm.exe\""},{"path":"/reference/extdata_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Path to File in This Package — extdata_file","title":"Get Path to File in This Package — extdata_file","text":"Get Path File Package","code":""},{"path":"/reference/extdata_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Path to File in This Package — extdata_file","text":"","code":"extdata_file(...)"},{"path":"/reference/extdata_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Path to File in This Package — extdata_file","text":"... parts path passed system.file","code":""},{"path":"/reference/get_lid_para_types.html","id":null,"dir":"Reference","previous_headings":"","what":"get_lid_para_types — get_lid_para_types","title":"get_lid_para_types — get_lid_para_types","text":"get_lid_para_types","code":""},{"path":"/reference/get_lid_para_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_lid_para_types — get_lid_para_types","text":"","code":"get_lid_para_types()"},{"path":"/reference/get_lid_para_types.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_lid_para_types — get_lid_para_types","text":"returns tidy data frame required parameteration LIDs based SWMM documentation","code":""},{"path":"/reference/get_lid_para_types.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_lid_para_types — get_lid_para_types","text":"","code":"get_lid_para_types() #> Rows: 8 Columns: 9 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (9): lid_id, lid_name, lid_name_tidy, surface, pavement, soil, storage, ... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> # A tibble: 48 × 5 #>    lid_id lid_name           lid_name_tidy     type     value #>    <chr>  <chr>              <chr>             <chr>    <chr> #>  1 BC     Bio-Retention Cell bioretention_cell surface  x     #>  2 BC     Bio-Retention Cell bioretention_cell pavement NA    #>  3 BC     Bio-Retention Cell bioretention_cell soil     x     #>  4 BC     Bio-Retention Cell bioretention_cell storage  x     #>  5 BC     Bio-Retention Cell bioretention_cell drain    o     #>  6 BC     Bio-Retention Cell bioretention_cell drainmat NA    #>  7 RG     Rain Garden        rain_garden       surface  x     #>  8 RG     Rain Garden        rain_garden       pavement NA    #>  9 RG     Rain Garden        rain_garden       soil     x     #> 10 RG     Rain Garden        rain_garden       storage  NA    #> # … with 38 more rows"},{"path":"/reference/get_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function: get metadata for selected elements — get_meta","title":"Helper function: get metadata for selected elements — get_meta","text":"Helper function: get metadata selected elements","code":""},{"path":"/reference/get_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function: get metadata for selected elements — get_meta","text":"","code":"get_meta(name, path_out)"},{"path":"/reference/get_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function: get metadata for selected elements — get_meta","text":"name element select. one : c(\"subcatchments\", \"nodes\", \"links\", \"system\") path_out path SWMM output file","code":""},{"path":"/reference/get_meta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function: get metadata for selected elements — get_meta","text":"tibble columns \"name\", \"itype\", \"vindex\" corresponding IDs required read_out","code":""},{"path":"/reference/get_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Results — get_results","title":"Get Results — get_results","text":"Get Results","code":""},{"path":"/reference/get_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Results — get_results","text":"","code":"get_results(path_out, type = \"system\", object_name = NULL, vIndex = NULL)"},{"path":"/reference/get_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Results — get_results","text":"path_out path SWMM output file type output type, select c(\"subcatchments\" \"nodes\", \"links\" \"system\"), default: \"system\" object_name Sets objects time series data returned. NULL objects returned (default: NULL) vIndex indexes system wide indexes imported. default indexes imported (default: NULL). selected vIndex`s imported look documentation read_out","code":""},{"path":"/reference/get_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Results — get_results","text":"\"system\" tibble selected system variables, \"type\" list sublists \"object_name\"","code":""},{"path":"/reference/get_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Results — get_results","text":"","code":"if (FALSE) { path_out_file <- \"path-to-my-swmm-output-file\" results_subcatchments <- kwb.swmm::get_results(path_out_file, type = \"subcatchments\") results_links <- kwb.swmm::get_results(path_out_file, type = \"links\") results_nodes <- kwb.swmm::get_results(path_out_file, type = \"nodes\") results_system <- kwb.swmm::get_results(path_out_file, type = \"system\") }"},{"path":"/reference/hectar_to_squaremeter.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function: hectar to squaremeter — hectar_to_squaremeter","title":"Helper function: hectar to squaremeter — hectar_to_squaremeter","text":"Helper function: hectar squaremeter","code":""},{"path":"/reference/hectar_to_squaremeter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function: hectar to squaremeter — hectar_to_squaremeter","text":"","code":"hectar_to_squaremeter(hectar)"},{"path":"/reference/hectar_to_squaremeter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function: hectar to squaremeter — hectar_to_squaremeter","text":"hectar hectar","code":""},{"path":"/reference/hectar_to_squaremeter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function: hectar to squaremeter — hectar_to_squaremeter","text":"area hectar","code":""},{"path":"/reference/hectar_to_squaremeter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function: hectar to squaremeter — hectar_to_squaremeter","text":"","code":"squaremeter_to_hectar(100) #> [1] 0.01"},{"path":"/reference/lps_to_mmPerHour.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function: converts l/s into mm/h — lps_to_mmPerHour","title":"Helper function: converts l/s into mm/h — lps_to_mmPerHour","text":"Helper function: converts l/s mm/h","code":""},{"path":"/reference/lps_to_mmPerHour.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function: converts l/s into mm/h — lps_to_mmPerHour","text":"","code":"lps_to_mmPerHour(values)"},{"path":"/reference/lps_to_mmPerHour.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function: converts l/s into mm/h — lps_to_mmPerHour","text":"values values liter per second","code":""},{"path":"/reference/lps_to_mmPerHour.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function: converts l/s into mm/h — lps_to_mmPerHour","text":"values mm per hour","code":""},{"path":"/reference/lps_to_mmPerHour.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function: converts l/s into mm/h — lps_to_mmPerHour","text":"","code":"lps_to_mmPerHour(1) #> [1] 3.6"},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"/reference/run_swmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Run SWMM — run_swmm","title":"Run SWMM — run_swmm","text":"allows run SWMM model model folder, .e. possible define paths climate data swmm_model.inp relative paths (contained folder subfolder model_dir)","code":""},{"path":"/reference/run_swmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run SWMM — run_swmm","text":"","code":"run_swmm(model_dir, model_inp, exe, ...)"},{"path":"/reference/run_swmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run SWMM — run_swmm","text":"model_dir model directory 'model.inp' model_inp name model input fike 'model.inp' exe path SWMM executabvle ... additional arguments passed shell","code":""},{"path":"/reference/run_swmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run SWMM — run_swmm","text":"runs SWMM","code":""},{"path":"/reference/squaremeter_to_hectar.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function: squaremeter to hectar — squaremeter_to_hectar","title":"Helper function: squaremeter to hectar — squaremeter_to_hectar","text":"Helper function: squaremeter hectar","code":""},{"path":"/reference/squaremeter_to_hectar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function: squaremeter to hectar — squaremeter_to_hectar","text":"","code":"squaremeter_to_hectar(squaremeter)"},{"path":"/reference/squaremeter_to_hectar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function: squaremeter to hectar — squaremeter_to_hectar","text":"squaremeter squarmeter","code":""},{"path":"/reference/squaremeter_to_hectar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function: squaremeter to hectar — squaremeter_to_hectar","text":"area hectar","code":""},{"path":"/reference/squaremeter_to_hectar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function: squaremeter to hectar — squaremeter_to_hectar","text":"","code":"squaremeter_to_hectar(100) #> [1] 0.01"},{"path":"/news/index.html","id":"kwbswmm-010-2022-05-23","dir":"Changelog","previous_headings":"","what":"kwb.swmm 0.1.0 2022-05-23","title":"kwb.swmm 0.1.0 2022-05-23","text":"Functions download_swmm_executable(): downloads SWMM executable USEPA`s GitHub repo https://github.com/USEPA/Stormwater-Management-Model/releases run_swmm(): compared swmmr::run_swmm()allows use allows run SWMM model model folder, .e. possible define paths climate data swmm_model.inp relative paths (contained folder subfolder model_dir) get_results() function importing SWMM results R calculate_rainevent_stats() aggregation imported results based user-defined column (default: total_runoff), function (default: sum) event separation time get_lid_para_types(): returning tidy tibble expected/possible system elements different low impact development elements Workflow use R package","code":""},{"path":"/news/index.html","id":"kwbswmm-0009000","dir":"Changelog","previous_headings":"","what":"kwb.swmm 0.0.0.9000","title":"kwb.swmm 0.0.0.9000","text":"Added NEWS.md file track changes package. see https://style.tidyverse.org/news.html writing good NEWS.md","code":""}]
